service: team
app: test-task
tenant: vadimnapalkov

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  environment:
    TEAM_TABLE: team-${opt:stage, self:provider.stage}
    USER_TABLE: user-${opt:stage, self:provider.stage}
    FRONT_URL: http://localhost:8080
    SMTP_HOST: smtp.yandex.ru"
    SMTP_PORT: 587
    SMTP_USER: test.mailer@kodep.ru
    SMTP_PASS: hot6Zoot
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

package:
  individually: true

functions:
  teamCreate:
    handler: api/team.create
    events:
      - http:
          path: /api/team
          method: post
          cors: true
  getAllTeams:
    handler: api/team.getAll
    events:
      - http:
          path: /api/team
          method: get
          cors: true
  userCreate:
    handler: api/user.create
    events:
      - http:
          path: /api/user
          method: post
          cors: true
  getMembersTeam:
    handler: api/user.getMembersTeam
    events:
      - http:
          path: /api/members/{teamId}
          method: get
          request:
            parameters:
              paths:
                teamId: true
          cors: true
  inviteUsersInTeam:
    handler: api/user.inviteUsersInTeam
    events:
      - http:
          path: /api/team/invite
          method: post
          cors: true

resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            TargetOriginId: ApiGateway
            DefaultTTL: 30
            ViewerProtocolPolicy: 'redirect-to-https'
            ForwardedValues:
              QueryString: false
          Enabled: true
          PriceClass: PriceClass_100
          Origins:
            - Id: ApiGateway
              DomainName:
                Fn::Join:
                  - "."
                  - - Ref: ApiGatewayRestApi
                    - execute-api
                    - us-east-1
                    - amazonaws.com
              OriginPath: /dev
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
        TeamTable:
          Type: "AWS::DynamoDB::Table"
          DeletionPolicy: Retain
          Properties:
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: S
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            TableName: ${self:provider.environment.TEAM_TABLE}
        UserTable:
          Type: "AWS::DynamoDB::Table"
          DeletionPolicy: Retain
          Properties:
            AttributeDefinitions:
              - AttributeName: id
                AttributeType: S
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            TableName: ${self:provider.environment.USER_TABLE}
